[package]
name = "eframe_sc2"
version = "0.1.0"
authors = ["Seb Ospina <kraige@gmail.com>"]
edition = "2021"
rust-version = "1.87"

[dependencies]
egui = "0.31"
eframe = { version = "0.31", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
    "x11",           # To support older Linux distributions (restores one of the default features)
] }
log = "0.4"
rfd = "0.15"
egui_plot = "0.32"
egui_extras = { version = "0.31", features = ["datepicker", "serde"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1.0.91"
ehttp = { version = "0.5", features = ["native-async"] }
urlencoding = "2.1.3"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
s2protocol = { version = "3.2.1", features = ["dep_arrow"] }
env_logger = "0.11"
poll-promise = { version = "0.3", features = ["tokio"] }
tokio = { version = "1", features = ["full"] }
axum = { version = "0.7", features = ["ws"] }
tracing-subscriber = { version = "0.3.17", features = ["env-filter", "json"] }
polars = { version = "0.49", features = [
    "full",
    "trigonometry",
    "regex",
    "strings",
    "top_k",
    "dtype-full",
] }
tracing = { version = "0.1", features = ["max_level_debug"] }
clap = { version = "4.4", features = ["derive"] }
thiserror = "2.0"
chrono = { version = "0.4.38", features = ["serde"] }
tower = { version = "0.5", features = ["full"] }
tower-http = { version = "0.6", features = ["fs", "trace"] }
hyper = { version = "1.5", features = ["full"] }
hyper-util = "0.1"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
s2protocol = { version = "3.2.1", default-features = false }
chrono = { version = "0.4.38", default-features = false, features = [
    "wasmbind",
] }
wasm-bindgen-futures = "0.4"
poll-promise = { version = "0.3", features = ["web"] }
tokio = { version = "1", features = [
    "sync",
    "macros",
    "io-util",
    "rt",
    "time",
] }
web-sys = "0.3.70" # to access the DOM


[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
